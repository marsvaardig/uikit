@if $molecule--compare {
  .js-enabled {
    .compare__container {
      position: relative;
      display: block;
    }

    .compare__draggable {
      width: px(48);
      height: 100%;
      z-index: 3;
      margin-left: -(px(24));

      position: absolute !important; // Fix issue with PageSpeed prioritize_critical_css filter https://github.com/janssit/infrastructure/issues/26

      @include pseudo(before) {
        height: 100%;
        width: px(8);
        left: 50%;
        margin-left: -(px(4));

        background: $color-brand;
      }
    }

    .compare__draggable.is-dragging {
      opacity: 0.7;
    }

    .compare__after {
      position: absolute;
      height: 100%;
      width: 100%;
    }

    .compare__before {
      position: absolute;
      left: 0;
      top: 0;

      display: block;
      height: 100%;
      width: 100%;
      z-index: 2;

      will-change: clip;
    }

    .compare__handle {
      height: px(40);
      width: px(40);
      border-radius: 100%;
      background: $color-brand;
      position: absolute;
      top: 50%;
      left: px(4);
      margin-top: -(px(20));
    }

    .compare__arrow {
      position: absolute;
      top: px(12);

      width: 0;
      height: 0;

      border-top: px(8) solid transparent;
      border-bottom: px(8) solid transparent;
    }

    .compare__arrow--left {
      left: 0;
      margin-left: px(8);

      border-right: px(8) solid white;
    }

    .compare__arrow--right {
      right: 0;
      margin-right: px(8);

      border-left: px(8) solid white;
    }
  }

  .compare__before,
  .compare__after {

    height: 100%;

    .lazyload__wrapper {
      height: 100%;
    }

    @include pseudo(before) {
      @include spacing(all, margin, 0.5);

      padding: px(4) px(8);

      @include fluid-property(font-size, $font-size-small, $font-size);
      text-align: center;

      @include breakpoint($charlie) {
        border-radius: 100%;
        height: px(64);
        width: px(64);
        line-height: px(64);
        padding: 0;
      }

      color: white;
      background: rgba($color-brand, .85);
      border-radius: px(8);
      z-index: 1;
    }
  }

  .compare__before {
    @include pseudo(before) {
      content: "Voor";

      left: 0;
    }
  }

  .compare__after {
    @include pseudo(before) {
      content: "Na";

      right: 0;
    }
  }

  .compare__draggable:hover,
  .compare__handle:hover {
    cursor: grab;
  }

  .objectfit .compare__container--3-to-1.compare__container--3-to-1 {
    min-height: calc(100vw / 2);

    @include breakpoint($charlie) {
      min-height: calc(100vw / 3);
    }

    @include breakpoint($width-maximum) {
      min-height: auto;
      height: calc(#{$width-maximum} / 3);
    }

    img {
      object-fit: cover;
      width: 100%;
      height: 100%;
    }
  }
}
