@use "../../tools" as *;

.sidebar--left {
  display: flex;
  flex: 0 0 auto;
  inline-size: px(48);
  min-inline-size: calc(#{px(48)} + (calc(100vw - #{px(16)}) - #{px(48)}) * var(--ui-sidebar-left-progress));
  max-block-size: 100%;
  margin-inline-start: calc(var(--ui-chrome-spacing-s) * -1);
  overflow: visible;
  transition: min-inline-size $chrome-transition-duration ease-in-out, inline-size $chrome-transition-duration ease-in-out;

  @include breakpoint($chrome-breakpoint2) {
    inline-size: calc(#{px(48)} + (calc(var(--ui-sidebar-left-width)) - #{px(48)}) * var(--ui-sidebar-left-progress));
    min-inline-size: var(--ui-sidebar-left-min-width);
    max-inline-size: min(33vw, var(--ui-sidebar-left-max-width));

    @include state('has', 'toggled-sidebar-left|not(resizing)') {
      min-inline-size: px(48);
    }
  }

  .sidebar__content {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    min-inline-size: min(#{px(320)}, max(var(--ui-sidebar-left-width), var(--ui-sidebar-left-min-width)));
    padding: 0;
    overflow: hidden;

    @include breakpoint($chrome-breakpoint2) {
      min-inline-size: min(min(33vw, px(320)), max(var(--ui-sidebar-left-width), var(--ui-sidebar-left-min-width)));
    }
  }

  .sidebar__resizer {
    inset-inline-end: calc((var(--ui-chrome-spacing-m) / 2) * -1);

    @include pseudo(before, false) {
      inset-block-start: 50%;
      inset-inline-start: 50%;
      inline-size: px(12);
      block-size: px(56);
      background-color: #fff;
      border-radius: 4px;
      box-shadow: 0 0 12px rgb(0 0 0 / 15%), 0 0 24px rgb(0 0 0 / 25%);
      opacity: 0;
      transition: opacity 100ms ease-in-out 120ms;
      transform: translateX(-50%) translateY(-50%);
    }

    @include pseudo(after, false) {
      inset-block-start: 50%;
      inset-inline-start: 50%;
      inline-size: 3px;
      block-size: 1rem;
      border-inline: 1px solid #555;
      opacity: 0;
      transition: opacity 100ms ease-in-out 120ms;
      transform: translate(-50%, -50%);
    }

    @include state('has', 'toggled-sidebar-left|not(resizing)') {
      display: none;
    }

    @include hover {
      &::before,
      &::after {
        opacity: 1;
      }
    }
  }

  &[data-resizing] {
    .sidebar__resizer {
      &::before,
      &::after {
        opacity: 1;
      }
    }
  }

  .sidebar-toggle-left {
    @include state('has', 'toggled-sidebar-left') {
      .is\:off {
        display: none;

        @include breakpoint($chrome-breakpoint2) {
          display: block;
        }
      }

      .is\:on {
        display: block;

        @include breakpoint($chrome-breakpoint2) {
          display: none;
        }
      }
    }
  }

  .navigation-rename {
    @include state('has', 'toggled-sidebar-left') {
      & > *:not(.navigation--persistent) {
        pointer-events: auto;

        @include breakpoint($chrome-breakpoint2) {
          pointer-events: none;
        }
      }
    }
  }

  @include state('has', 'toggled-sidebar-left|not(resizing)') {
    @include hover {
      @include breakpoint($chrome-breakpoint2) {
        --ui-sidebar-left-progress: 1;

        .navigation-rename {
          & > *  {
            pointer-events: auto;
          }
        }

        .navigation--persistent {
          .navigation__heading {
            text-indent: 0;

            &::before {
              display: none;
            }
          }
        }
      }
    }
  }

  .sidebar__swiper {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    z-index: 99;
    width: 100vw;
    pointer-events: none;
    background: yellow;
    opacity: 0;

    @include breakpoint($chrome-breakpoint2) {
      display: none;
    }
  }
}
